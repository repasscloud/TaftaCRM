// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TaftaCRM.Data;

#nullable disable

namespace TaftaCRM.Migrations
{
    [DbContext(typeof(TaftaDbContext))]
    [Migration("20240515123101_initDb")]
    partial class initDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TaftaCRM.Models.Client.Permissions.ClientRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Permissions")
                        .HasColumnType("integer")
                        .HasColumnName("permissions");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("role_name");

                    b.HasKey("Id");

                    b.ToTable("client_roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Permissions = 15,
                            RoleName = "Admin"
                        });
                });

            modelBuilder.Entity("TaftaCRM.Models.Internal.System.UserAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ClientRoleId")
                        .HasColumnType("integer");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("user_name");

                    b.Property<bool>("EmailVerified")
                        .HasColumnType("boolean")
                        .HasColumnName("email_verified");

                    b.Property<int>("FailedLoginAttempts")
                        .HasColumnType("integer")
                        .HasColumnName("failed_login_attempts");

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_login");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("password");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("phone_number");

                    b.Property<bool>("PhoneNumberVerified")
                        .HasColumnType("boolean")
                        .HasColumnName("phone_number_verified");

                    b.Property<string>("SecurityStamp")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("security_stamp");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean")
                        .HasColumnName("two_factor_enabled");

                    b.Property<DateTime>("userAccountCreated")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created");

                    b.Property<DateTime?>("userAccountExpiration")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("expires");

                    b.Property<int>("userAccountRole")
                        .HasColumnType("integer")
                        .HasColumnName("role");

                    b.Property<int>("userAccountStatus")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.HasIndex("ClientRoleId");

                    b.ToTable("user_accounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClientRoleId = 1,
                            EmailAddress = "admin@taftacrm.com",
                            EmailVerified = true,
                            FailedLoginAttempts = 0,
                            Password = "9mssKi>£4zpx?TY]@_i1.Wf8lFA9;",
                            PhoneNumberVerified = false,
                            SecurityStamp = "fc0c7d56-a791-4cba-bc13-9b5782bd6d36",
                            TwoFactorEnabled = false,
                            userAccountCreated = new DateTime(2024, 5, 15, 12, 31, 1, 249, DateTimeKind.Utc).AddTicks(6030),
                            userAccountRole = 1,
                            userAccountStatus = 0
                        });
                });

            modelBuilder.Entity("TaftaCRM.Models.Internal.System.UserAccount", b =>
                {
                    b.HasOne("TaftaCRM.Models.Client.Permissions.ClientRole", "ClientRole")
                        .WithMany("UserAccounts")
                        .HasForeignKey("ClientRoleId");

                    b.Navigation("ClientRole");
                });

            modelBuilder.Entity("TaftaCRM.Models.Client.Permissions.ClientRole", b =>
                {
                    b.Navigation("UserAccounts");
                });
#pragma warning restore 612, 618
        }
    }
}
